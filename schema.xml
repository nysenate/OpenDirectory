<?xml version="1.0" encoding="UTF-8" ?>
<!--  
 This is the Solr schema file. This file should be named "schema.xml" and
 should be in the conf directory under the solr home
 (i.e. ./solr/conf/schema.xml by default) 
 or located where the classloader for the Solr webapp can find it.

 This example schema is the recommended starting point for users.
 It should be kept correct and concise, usable out-of-the-box.

 For more information, on how to customize this file, please see
 http://wiki.apache.org/solr/SchemaXml

 PERFORMANCE NOTE: this schema includes many optional features and should not
 be used for benchmarking.  To improve performance one could
  - set stored="false" for all fields possible (esp large fields) when you
    only need to search on the field but don't need to return the original
    value.
  - set indexed="false" if you don't need to search on the field, but only
    return the field as a result of searching on other indexed fields.
  - remove all unneeded copyField statements
  - for best index size and searching performance, set "index" to false
    for all general text fields, use copyField to copy them to the
    catchall "text" field, and use that for searching.
  - For maximum indexing performance, use the StreamingUpdateSolrServer
    java client.
  - Remember to run the JVM in server mode, and use a higher logging level
    that avoids logging every request
-->

<schema name="OpenDirectory" version="1.0">
	<types>
	
		<!-- field type definitions. The "name" attribute is
			just a label to be used by field definitions.  The "class"
			attribute and any other attributes determine the real
			behavior of the fieldType.
			 <field name="permissions" type="string" indexed="false" stored="true"/> 	Class names starting with "solr" refer to java classes in the
			org.apache.solr.analysis package.
    	-->

		<!-- The StrField type is not analyzed, but indexed/stored verbatim.  
       		- StrField and TextField support an optional compressThreshold which
       		limits compression (if enabled in the derived fields) to values which
       		exceed a certain size (in characters).
    	-->
    	<fieldType name="string" class="solr.StrField" sortMissingLast="true" omitNorms="true"/>
    	
		<!-- solr.TextField allows the specification of custom text analyzers
		         specified as a tokenizer and a list of token filters. Different
		         analyzers may be specified for indexing and querying.
		
		         The optional positionIncrementGap puts space between multiple fields of
		         this type on the same document, with the purpose of preventing false phrase
		         matching across fields.
		
		         For more info on customizing your analyzer chain, please see
		         http://wiki.apache.org/solr/AnalyzersTokenizersTokenFilters
		     -->
	
	    <!-- A text field that only splits on whitespace for exact matching of words -->
	    <fieldType name="text_ws" class="solr.TextField" positionIncrementGap="100">
	      <analyzer>
	        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
	      </analyzer>
	    </fieldType>

	    <!-- A text field that uses WordDelimiterFilter to enable splitting and matching of
	        words on case-change, alpha numeric boundaries, and non-alphanumeric chars,
	        so that a query of "wifi" or "wi fi" could match a document containing "Wi-Fi".
	        Synonyms and stopwords are customized by external files, and stemming is enabled.
	        -->
	    <fieldType name="text" class="solr.TextField" positionIncrementGap="100">
			<analyzer type="index">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
				<!-- in this example, we will only use synonyms at query time
					<filter class="solr.SynonymFilterFactory" synonyms="index_synonyms.txt" ignoreCase="true" expand="false"/>
				-->
				<!-- Case insensitive stop word removal.
					add enablePositionIncrements=true in both the index and query
					analyzers to leave a 'gap' for more accurate phrase queries.
				-->
			 	<filter class="solr.StopFilterFactory"
				          ignoreCase="true"
				          words="stopwords.txt"
				          enablePositionIncrements="true"
			          />
			 	<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="1"/>
			  	<filter class="solr.LowerCaseFilterFactory"/>
			  	<filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
			</analyzer>
			<analyzer type="query">
				<tokenizer class="solr.WhitespaceTokenizerFactory"/>
			  	<filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
			  	<filter class="solr.StopFilterFactory"
				          ignoreCase="true"
				          words="stopwords.txt"
				          enablePositionIncrements="true"
			          />
			  	<filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="1"/>
			  	<filter class="solr.LowerCaseFilterFactory"/>
			  	<filter class="solr.SnowballPorterFilterFactory" language="English" protected="protwords.txt"/>
			</analyzer>
	    </fieldType>
	    
		<!-- A general unstemmed text field - good if one does not know the language of the field -->
		<fieldType name="textgen" class="solr.TextField" positionIncrementGap="100">
  			<analyzer type="index">
			    <tokenizer class="solr.WhitespaceTokenizerFactory"/>
			    <filter class="solr.StopFilterFactory" ignoreCase="true" words="stopwords.txt" enablePositionIncrements="true" />
			    <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="1" catenateNumbers="1" catenateAll="0" splitOnCaseChange="0"/>
			    <filter class="solr.LowerCaseFilterFactory"/>
			</analyzer>
			<analyzer type="query">
			    <tokenizer class="solr.WhitespaceTokenizerFactory"/>
			    <filter class="solr.SynonymFilterFactory" synonyms="synonyms.txt" ignoreCase="true" expand="true"/>
			    <filter class="solr.StopFilterFactory"
			            ignoreCase="true"
			            words="stopwords.txt"
		          		enablePositionIncrements="true"
	            	/>
			    <filter class="solr.WordDelimiterFilterFactory" generateWordParts="1" generateNumberParts="1" catenateWords="0" catenateNumbers="0" catenateAll="0" splitOnCaseChange="0"/>
			    <filter class="solr.LowerCaseFilterFactory"/>
  			</analyzer>
		</fieldType>
    
	</types>
	
	<fields>
		<!-- Valid attributes for fields:
		  name: mandatory - the name for the field
		  type: mandatory - the name of a previously defined type from the 
		    <types> section
		  indexed: true if this field should be indexed (searchable or sortable)
		  stored: true if this field should be retrievable
		  compressed: [false] if this field should be stored using gzip compression
		    (this will only apply if the field type is compressable; among
		    the standard field types, only TextField and StrField are)
		  multiValued: true if this field may contain multiple values per document
		  omitNorms: (expert) set to true to omit the norms associated with
		    this field (this disables length normalization and index-time
		    boosting for the field, and saves some memory).  Only full-text
		    fields or fields that need an index-time boost need norms.
		  termVectors: [false] set to true to store the term vector for a
		    given field.
		    When using MoreLikeThis, fields used for similarity should be
		    stored for best performance.
		  termPositions: Store position information with the term vector.  
		    This will increase storage costs.
		  termOffsets: Store offset information with the term vector. This 
		    will increase storage costs.
		  default: a value that should be used if no value is specified
		    when adding a document.
		-->

		<field name="uid" type="string" indexed="true" stored="true" required="true" />
		<field name="otype" type="string" indexed="true" stored="true" required="true" />
		<field name="firstName" type="textgen" indexed="true" stored="true" />
		<field name="lastName" type="textgen" indexed="true" stored="true"/>
		<field name="title" type="textgen" indexed="true" stored="true"/>
		<field name="fullName" type="textgen" indexed="true" stored="true"/>
		<field name="state" type="textgen" indexed="true" stored="true" />
		<field name="location" type="textgen" indexed="true" stored="true"/>
		<field name="department" type="textgen" indexed="true" stored="true" />
		<field name="phone" type="textgen" indexed="true" stored="true"/>
		<field name="email"  type="textgen" indexed="true" stored="true"/>
		<field name="skills" type="textgen" indexed="true" stored="true"/>
		<field name="interests" type="textgen" indexed="true" stored="true"/>
		<field name="bio" type="textgen" indexed="true" stored="true"/>
		<field name="facebook" type="textgen" indexed="false" stored="true"/>
		<field name="linkedin" type="textgen" indexed="false" stored="true"/>
		<field name="twitter" type="textgen" indexed="false" stored="true"/>
		<field name="irc" type="textgen" indexed="true" stored="true"/>
		<field name="picture" type="text" indexed="false" stored="true"/>
		<field name="email2" type="textgen" indexed="true" stored="true"/>
		<field name="phone2" type="textgen" indexed="true" stored="true"/>
		<field name="bookmarks" type="string" indexed="false" stored="true"/>
		<field name="permissions" type="string" indexed="false" stored="true"/>
		<field name="user_credential" type="string" indexed="false" stored="true" />
		<field name="unprocessedBio" type="string" indexed="false" stored="true" />
		<field name="unprocessedSkills" type="string" indexed="false" stored="true" />
		<field name="unprocessedInterests" type="string" indexed="false" stored="true" />
		<field name="modified" type="textgen" indexed="true" stored="true"/>
		<field name="frontPage" type="textgen" indexed="true" stored="true"/>
		<field name="hash" type="string" indexed="false" stored="true" />
		<field name="authorized" type="string" indexed="false" stored="true" />
		<field name="authorizationHash" type="string" indexed="false" stored="true" />
		
				doc.addField("hash", person.getHash());
		doc.addField("authorized", person.getAuthorized());
		doc.addField("authorizationHash", person.getAuthorizationHash());
   
      	<!-- catchall field, containing all other searchable text fields (implemented
        	 via copyField further on in this schema
       	-->
		<field name="text" type="text" indexed="true" stored="false" multiValued="true"/>
   		
   		
   		
		<!-- Dynamic field definitions.  If a field name is not found, dynamicFields
		     will be used if the name matches any of the patterns.
		     RESTRICTION: the glob-like pattern in the name attribute must have
		     	a "*" only at the start or the end.
		     EXAMPLE:  name="*_i" will match any field ending in _i (like myid_i, z_i)
		     	Longer patterns will be matched first.  if equal size patterns
		     	both match, the first appearing in the schema will be used.
     	-->
		<dynamicField name="*_access"  type="text_ws" indexed="true"  stored="true"/>
   
	</fields>
	
	<!-- Field to use to determine and enforce document uniqueness. 
	     Unless this field is marked with required="false", it will be a required field -->
	<uniqueKey>uid</uniqueKey>

	<!-- field for the QueryParser to use when an explicit fieldname is absent -->
	<defaultSearchField>text</defaultSearchField>

	<!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
	<solrQueryParser defaultOperator="OR"/>

	<!-- copyField commands copy one field to another at the time a document
         is added to the index.  It's used either to index the same field differently,
         or to add multiple fields to the same field for easier/faster searching.
    -->
	<copyField source="fullName" dest="text"/>
	<copyField source="phone" dest="text"/>
   	<copyField source="title" dest="text"/>
	<copyField source="location" dest="text"/>
	<copyField source="department" dest="text"/>
	<copyField source="email" dest="text"/>
	<copyField source="skills" dest="text"/>
	<copyField source="interests" dest="text"/>
	<copyField source="irc" dest="text"/>
	<copyField source="email2" dest="text"/>
	<copyField source="phone2" dest="text"/>
	
</schema>